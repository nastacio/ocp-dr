---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
  name: presync-read-rhacm-secret
  namespace: openshift-gitops
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/openshift/origin-cli:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: CLUSTER_1_NAME
              value: {{.Values.metadata.cluster.cluster_1.name}}
            - name: CLUSTER_2_NAME
              value: {{.Values.metadata.cluster.cluster_2.name}}
            - name: RHACM_SECRET
              value: {{.Values.metadata.rhacm.secret}}
            - name: RHACM_SECRET_NAMESPACE
              value: {{.Values.metadata.rhacm.secret_namespace}}
          command:
            - /bin/bash
            - -c
            - |
              set -eo pipefail
              set -x

              result=0

              WORKDIR=$(mktemp -d) || exit 1
              cleanRun() {
                  if [ -n "${WORKDIR}" ]; then
                      rm -rf "${WORKDIR}"
                  fi
              }
              trap cleanRun EXIT

              oc extract secret/"${RHACM_SECRET:?}" \
                  --namespace "${RHACM_SECRET_NAMESPACE:?}" \
                  --keys pullSecret,ssh-privatekey,aws_access_key_id,aws_secret_access_key \
                  --to="${WORKDIR}" \
                  --confirm \
              && for cluster_name in "${CLUSTER_1_NAME}" "${CLUSTER_2_NAME}"
              do
                  oc project -q "${cluster_name}" 2> /dev/null \
                  || oc create namespace "${cluster_name}"

                  oc delete secret "${cluster_name}-pull-secret" \
                      --namespace "${cluster_name}" \
                      --ignore-not-found=true \
                  && oc create secret generic "${cluster_name}-pull-secret" \
                      --namespace "${cluster_name}" \
                      --from-file=.dockerconfigjson="${WORKDIR}/pullSecret" \
                      --type=kubernetes.io/dockerconfigjson \
                  && echo "INFO: Created pull secret for cluster ${cluster_name}" \
                  && oc delete secret "${cluster_name}-ssh-private-key" \
                      --namespace "${cluster_name}" \
                      --ignore-not-found=true \
                  && oc create secret generic "${cluster_name}-ssh-private-key" \
                      --namespace "${cluster_name}" \
                      --from-file=ssh-privatekey="${WORKDIR}/ssh-privatekey" \
                  && echo "INFO: Created private key secret for cluster ${cluster_name}" \
                  && oc delete secret "${cluster_name}-aws-creds" \
                      --namespace "${cluster_name}" \
                      --ignore-not-found=true \
                  && oc create secret generic "${cluster_name}-aws-creds" \
                      --namespace "${cluster_name}" \
                      --from-file=aws_access_key_id="${WORKDIR}/aws_access_key_id" \
                      --from-file=aws_secret_access_key="${WORKDIR}/aws_secret_access_key" \
                  && echo "INFO: Created cloud provider key secret for cluster ${cluster_name}"
              done \
              || result=1

              exit ${result}
      restartPolicy: Never
      serviceAccountName: {{.Values.serviceaccount.argocd_application_controller}}
  backoffLimit: 2
